#if !canImport(ObjectiveC)
import XCTest

extension ChildrenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ChildrenTests = [
        ("testChildrenOfCurrentDirectory", testChildrenOfCurrentDirectory),
        ("testChildrenOfCurrentDirectoryRecursive", testChildrenOfCurrentDirectoryRecursive),
    ]
}

extension MetadataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MetadataTests = [
        ("testRetrievingMetadata", testRetrievingMetadata),
    ]
}

extension POSIXBinaryStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXBinaryStringTests = [
        ("testDecodingAndEncodingIsCommunitive", testDecodingAndEncodingIsCommunitive),
    ]
}

extension POSIXPartsParsingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXPartsParsingTests = [
        ("test2SlashRoot", test2SlashRoot),
        ("test3SlashRoot", test3SlashRoot),
        ("testIntermediateCurrentDirectoryIsRemoved", testIntermediateCurrentDirectoryIsRemoved),
        ("testNoRootIsParsedCorrectly", testNoRootIsParsedCorrectly),
        ("testParsingDriveOnPOSIX", testParsingDriveOnPOSIX),
        ("testParsingParts", testParsingParts),
        ("testRootIsParsed", testRootIsParsed),
    ]
}

extension POSIXPathInitializationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXPathInitializationTests = [
        ("testInitializationFromString", testInitializationFromString),
        ("testInitializingFromCString", testInitializingFromCString),
    ]
}

extension POSIXPathJoiningTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXPathJoiningTests = [
        ("testJoiningMixedTypes", testJoiningMixedTypes),
        ("testJoiningWithExsitingSeparator", testJoiningWithExsitingSeparator),
        ("testSimpleJoining", testSimpleJoining),
        ("testSimpleJoiningEndingWithAbsolutePath", testSimpleJoiningEndingWithAbsolutePath),
        ("testSimpleJoiningStartingAndEndingWithAbsolutePath", testSimpleJoiningStartingAndEndingWithAbsolutePath),
        ("testSimpleJoiningStartingWithAbsolutePath", testSimpleJoiningStartingWithAbsolutePath),
        ("testSimpleJoiningWithMulilpePaths", testSimpleJoiningWithMulilpePaths),
        ("testSimpleJoiningWithMultipleAbsolutePath", testSimpleJoiningWithMultipleAbsolutePath),
    ]
}

extension POSIXPurePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXPurePathTests = [
        ("testNameFromPath", testNameFromPath),
        ("testNameWithASuffix", testNameWithASuffix),
        ("testNameWithMultipleSuffixes", testNameWithMultipleSuffixes),
        ("testNameWithNoSuffix", testNameWithNoSuffix),
        ("testNameWithOnlyRoot", testNameWithOnlyRoot),
    ]
}

extension PathJoiningOperatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PathJoiningOperatorTests = [
        ("testAddingPathAndPurePath", testAddingPathAndPurePath),
        ("testAddingPathAndString", testAddingPathAndString),
        ("testAddingPaths", testAddingPaths),
        ("testAddingPurePathAndPath", testAddingPurePathAndPath),
        ("testAddingStringAndPath", testAddingStringAndPath),
    ]
}

extension PermissionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PermissionsTests = [
        ("testMutatingReadOnly", testMutatingReadOnly),
    ]
}

extension PurePOSIXPathIsAbsoluteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PurePOSIXPathIsAbsoluteTests = [
        ("testNoDriveIsAbsolute", testNoDriveIsAbsolute),
        ("testNoRootNoDriveIsNotAbsolute", testNoRootNoDriveIsNotAbsolute),
    ]
}

extension PurePOSIXPathJoiningOperatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PurePOSIXPathJoiningOperatorTests = [
        ("testAddingPOSIXBinaryStringAndPurePath", testAddingPOSIXBinaryStringAndPurePath),
        ("testAddingPurePOSIXPathAndPOSIXBinaryString", testAddingPurePOSIXPathAndPOSIXBinaryString),
        ("testAddingPurePOSIXPathAndString", testAddingPurePOSIXPathAndString),
        ("testAddingPurePOSIXPaths", testAddingPurePOSIXPaths),
        ("testAddingStringAndPurePOSIXPath", testAddingStringAndPurePOSIXPath),
    ]
}

extension PureWindowsPathIsAbsoluteTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PureWindowsPathIsAbsoluteTests = [
        ("testIsAbsolute", testIsAbsolute),
        ("testNoDriveIsNotAbsolute", testNoDriveIsNotAbsolute),
        ("testNoRootIsNotAbsolute", testNoRootIsNotAbsolute),
        ("testNoRootNoDriveIsNotAbsolute", testNoRootNoDriveIsNotAbsolute),
    ]
}

extension PureWindowsPathJoiningOperatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PureWindowsPathJoiningOperatorTests = [
        ("testAddingPureWindowsPath", testAddingPureWindowsPath),
        ("testAddingPureWindowsPathAndString", testAddingPureWindowsPathAndString),
        ("testAddingPureWindowsPathAndWindowsBinaryString", testAddingPureWindowsPathAndWindowsBinaryString),
        ("testAddingStringAndPureWindowsPath", testAddingStringAndPureWindowsPath),
        ("testAddingWindowsBinaryStringAndPurePath", testAddingWindowsBinaryStringAndPurePath),
    ]
}

extension WindowsBinaryStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WindowsBinaryStringTests = [
        ("testDecodingAndEncodingIsCommunitive", testDecodingAndEncodingIsCommunitive),
    ]
}

extension WindowsFileTimeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WindowsFileTimeTests = [
        ("testCovertingFILETIME", testCovertingFILETIME),
    ]
}

extension WindowsPartsParsingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WindowsPartsParsingTests = [
        ("test2SlashRoot", test2SlashRoot),
        ("test3SlashRoot", test3SlashRoot),
        ("testIntermediateCurrentDirectoryIsRemoved", testIntermediateCurrentDirectoryIsRemoved),
        ("testNoRootIsParsedCorrectly", testNoRootIsParsedCorrectly),
        ("testParsingDriveOnWindows", testParsingDriveOnWindows),
        ("testParsingDriveOnWindows2", testParsingDriveOnWindows2),
        ("testParsingParts", testParsingParts),
        ("testParsingUNCDriveOnWindows", testParsingUNCDriveOnWindows),
        ("testRootIsParsed", testRootIsParsed),
    ]
}

extension WindowsPathJoiningTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WindowsPathJoiningTests = [
        ("testJoiningDriveOnlyWithPath", testJoiningDriveOnlyWithPath),
        ("testJoiningDriveOnlyWithRoot", testJoiningDriveOnlyWithRoot),
        ("testJoiningMixedTypes", testJoiningMixedTypes),
        ("testJoiningStartingWithDriveAndEndingWithRoot", testJoiningStartingWithDriveAndEndingWithRoot),
        ("testJoiningStartingWithRootAndEndingWithDrive", testJoiningStartingWithRootAndEndingWithDrive),
        ("testJoiningWithExsitingSeparator", testJoiningWithExsitingSeparator),
        ("testSimpleJoining", testSimpleJoining),
        ("testSimpleJoiningEndingWithAbsolutePath", testSimpleJoiningEndingWithAbsolutePath),
        ("testSimpleJoiningEndingWithDrive", testSimpleJoiningEndingWithDrive),
        ("testSimpleJoiningEndingWithDriveAndRoot", testSimpleJoiningEndingWithDriveAndRoot),
        ("testSimpleJoiningStartingAndEndingWithDifferentDrive", testSimpleJoiningStartingAndEndingWithDifferentDrive),
        ("testSimpleJoiningStartingAndEndingWithRoot", testSimpleJoiningStartingAndEndingWithRoot),
        ("testSimpleJoiningStartingAndEndingWithSameDrive", testSimpleJoiningStartingAndEndingWithSameDrive),
        ("testSimpleJoiningStartingWithAbsolutePath", testSimpleJoiningStartingWithAbsolutePath),
        ("testSimpleJoiningStartingWithDrive", testSimpleJoiningStartingWithDrive),
        ("testSimpleJoiningStartingWithDriveAndRoot", testSimpleJoiningStartingWithDriveAndRoot),
        ("testSimpleJoiningWithMulilpePaths", testSimpleJoiningWithMulilpePaths),
        ("testSimpleJoiningWithMultipleAbsolutePath", testSimpleJoiningWithMultipleAbsolutePath),
    ]
}

extension WindowsPurePathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WindowsPurePathTests = [
        ("testNameFromPath", testNameFromPath),
        ("testNameWithASuffix", testNameWithASuffix),
        ("testNameWithMultipleSuffixes", testNameWithMultipleSuffixes),
        ("testNameWithNoSuffix", testNameWithNoSuffix),
        ("testNameWithOnlyDriveAndRoot", testNameWithOnlyDriveAndRoot),
        ("testNameWithOnlyRoot", testNameWithOnlyRoot),
    ]
}

extension WorkingDirectoryTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WorkingDirectoryTests = [
        ("testAsWorkingDirectory", testAsWorkingDirectory),
        ("testGettingWorkingDirecotry", testGettingWorkingDirecotry),
        ("testSettingWorkingDirecotry", testSettingWorkingDirecotry),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ChildrenTests.__allTests__ChildrenTests),
        testCase(MetadataTests.__allTests__MetadataTests),
        testCase(POSIXBinaryStringTests.__allTests__POSIXBinaryStringTests),
        testCase(POSIXPartsParsingTests.__allTests__POSIXPartsParsingTests),
        testCase(POSIXPathInitializationTests.__allTests__POSIXPathInitializationTests),
        testCase(POSIXPathJoiningTests.__allTests__POSIXPathJoiningTests),
        testCase(POSIXPurePathTests.__allTests__POSIXPurePathTests),
        testCase(PathJoiningOperatorTests.__allTests__PathJoiningOperatorTests),
        testCase(PermissionsTests.__allTests__PermissionsTests),
        testCase(PurePOSIXPathIsAbsoluteTests.__allTests__PurePOSIXPathIsAbsoluteTests),
        testCase(PurePOSIXPathJoiningOperatorTests.__allTests__PurePOSIXPathJoiningOperatorTests),
        testCase(PureWindowsPathIsAbsoluteTests.__allTests__PureWindowsPathIsAbsoluteTests),
        testCase(PureWindowsPathJoiningOperatorTests.__allTests__PureWindowsPathJoiningOperatorTests),
        testCase(WindowsBinaryStringTests.__allTests__WindowsBinaryStringTests),
        testCase(WindowsFileTimeTests.__allTests__WindowsFileTimeTests),
        testCase(WindowsPartsParsingTests.__allTests__WindowsPartsParsingTests),
        testCase(WindowsPathJoiningTests.__allTests__WindowsPathJoiningTests),
        testCase(WindowsPurePathTests.__allTests__WindowsPurePathTests),
        testCase(WorkingDirectoryTests.__allTests__WorkingDirectoryTests),
    ]
}
#endif
